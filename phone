# Compiled By Mr Mafia | Muhammad Muzammil
# Github  :  https://github.com/Muzammil-404

import base64
exec(base64.b64decode("IyBDb21waWxlZCBCeSBNciBNYWZpYSB8IE11aGFtbWFkIE11emFtbWlsCiMgR2l0aHViICA6ICBodHRwczovL2dpdGh1Yi5jb20vTXV6YW1taWwtNDA0CgppbXBvcnQgYmFzZTY0CmV4ZWMoYmFzZTY0LmI2NGRlY29kZSgiYVcxd2IzSjBJR0poYzJVMk5BcGxlR1ZqS0dKaGMyVTJOQzVpTmpSa1pXTnZaR1VvSW1GWE1YZGlNMG93U1VoS2JHTllWbXhqTTFKNlJGRndjR0pZUW5aamJsRm5ZVzVPZG1Kbk1FdGhWekYzWWpOS01FbElVbkJpVjFWT1EyMXNkR05IT1hsa1EwSjZaVmhOVGtOdFdubGlNakJuWTBkNGFHUkhXblpqYlRCbllWY3hkMkl6U2pCSlNFNDFZek5TYkdKUk1FdGhWekYzWWpOS01FbEhPWHBFVVhCd1lsaENkbU51VVdkak0xWnBZMGhLZGxreVZucGpkekJMWVZjeGQySXpTakJKUjJnd1pFaEJkV015Vm5sa2JWWjVSRkZ3Y0dKWVFuWmpibEZuWXpJNWFtRXlWakJqTWxaNVpHMVdlVVJSY0hCaVdFSjJZMjVSWjJSSGFIbGFWMFpyWVZjMWJrUlJjRzFqYlRsMFNVZFNhR1JIVmpCaFZ6RnNTVWRzZEdOSE9YbGtRMEpyV1ZoU2JHUkhiSFJhVVRCTFlWY3hkMkl6U2pCSlNGWXhZVmRSVGtObk1FdEVVWEJ2WkVjeGMxZ3lUblppYmxKc1ltNVJaMUJUUVdsSmFVbE9RMnAzYUZKRk9VUldSbXhSVWxOQ2IyUkhNWE5RWnpCTFVFZG9NR0pYZHl0RVVXODRZVWRXYUZwRU5FNURhVUZuU1VOQk9HSlhWakJaVTBKMVdWY3hiRkJUU2pKaFYxWXpZMGM1ZVdSRFNXZFpNamwxWkVkV2RXUkVNR2xrTW14clpFZG5PVnBIVmpKaFYwNXNURmhrY0ZwSVVtOU1RMEp3WW0xc01HRlhSbk5NV0U1cVdWZDRiRkJVUlhWTlEwa3JSRkZ2WjBsRFFXZFFTRkp3WkVkNGJGQnJhazF6TUZoTmN6RlVUWE14VkUxek1GaE5jekZNVFhONVFreDZURTVLZWt4TloxRnplWHBUVFhsNlVtTjVlbFJ6ZVhwSlJYWk5jekJJVFhONVFrTjZURTVKZWt4T1VIcE1UbFI2VEU1RmVreE9RbnBNVFdkU2MzbDZVV041ZWxKTmVYcFVjM2w2VW1ONWVrbEdaazF6TUVoTmN6QjZUWE13U0UxemVVSlVla3hPUm5wTVRsTjZURTVYZWt4T1JucE1UbE42VEUwNFRETlNjR1JIZUd4UVp6QkxTVU5CWjBsRWVIcGtTR3h6V2xRMFRrTnBRV2RKUTBGblNVTkJaMWx0T1d0bFUwSTNSRkZ2WjBsRFFXZEpRMEZuU1VOQlowbERRbWxaVjA1eVdqTktkbVJYTld0TVYyeDBXVmRrYkU5cFFqRmpiWGR2U2pOS2FHTXlhSFJoVjNSb1RHMXdkMXA1WTNCUGR6QkxTVU5CWjBsRFFXZEpRMEZuU1VOQloxbHRSbXBoTW1SNVlqTldkVnBETVhwaFdIQnNUMmxDYW1JeldteGphbk5PUTJsQlowbERRV2RKUTBGblpsRXdTMGxEUVdkSlJIZDJZek5TTldKSFZTdEVVVzg0VERKb2JGbFhVU3RFVVc4NFdXMDVhMlZVTkU1RGFVRm5TVU5CT0dGRVJXZGpNMUkxWWtkVk9VbHRUblppUnpsNVQybENjMkZYTVd4UGVVa3JVMDE1ZWxKamVYcFdUWGw2VmsxNWVsSmplWHBWYzNsNlNVVjJUWE13YmsxemVVSkRla3hPU1hwTVRrWjZURTVQZWt4TloxTTRlWHBSWTNsNlNVVk1UWE13YWsxek1DOU5jekZRVFhNd1ZFMXpNRWhOYzNsQ1IzcE1Ua0o2VEU1RmVreE9UM3BNVGtaNlRFMW5Wamg1ZWxGamVYcFVUWGw2VVdONWVrbEdVRTF6TUZoTmN6Rk1UWE14WWsxek1GaE5jekZNVFhONmQzWmhSRVVyUkZGdlowbERRV2RRU0VGbll6TlNOV0pIVlRsSmJVNTJZa2M1ZVU5cFFtcGxWMFoxVDNsSksxWkhhSEJqZVVKNldsaEtNbHBZU1dkWk0wcHNXVmhTYkZwRFFtbGxVMEpWV2xoS2FFbElRbWhqUjBoM2JqWlhNMUJET1hkUVp6QkxTVU5CWjBsQk1FdEpRMEZuU1VSNGQwbElUakJsVjNoc1VGTkthbUl5ZUhaamFtOW5Zako0Y0dSdFZUZEphalZRWkRJMWJHTnBRazlaVnpGc1NVUnZOa3hUUkhkdU5WTnZZVlpTZWtsRFFrNWFaa05tY0ZsSk9Fd3pRU3RFVVc5blNVTkJaMFJSYjJkSlEwRm5VRWhCWjJNelVqVmlSMVU1U1cxT2RtSkhPWGxQYVVKellWY3hiRTk1U1N0SlJqbG1XREU1WmxneE9XWlJWM2h6U1VWU2RtSnRWWFZNYVRSMVZFYzVhRnBIYkhWYWVUUjFUR2swZFV4cWQzWmpSRFJPUTJsQlowbERRVGhrVjNjclJGRnZaMGxEUVdkSlEwRm5TVVI0YzJGVFFucGtTR3h6V2xRd2FWa3lPWE5pTTBrMlNVZE9OVmxYTkRkSmFqUjRUR2xFZDI1YWJUTTRTakpoYW5aRFpHMXdNM2R1V25Ga09Fb3lZV3AyUTJSdGNIWjNibHB4WTBsUVEyUnRiemQzYmxweFpqaEtNbUZxZGtOa2JYQjJkMjVhY1drNFNqSmhibVpEWkcxd1RIZHVXbkZYT0VveVlXcHBSSGR1V25GTk9Fb3lZVzB2UTJSdGNVeDNibHB4VXpoS01tRnNMME5rYlhCQlp6aEtLMWxuYVVFNFRESjRjRkJuTUV0SlEwRm5TVU5CWjBsRFFUaGlSMnRuWXpOU05XSkhWVGxKYlU1MllrYzVlVTlwUW5ka1dFcDNZa2RWTjBscU5IbE1hVUp3V21sQ1dtSXpWV2RrUjJod1ltMXpaMlZYT1RGamFVSnBXVmRSWjJGVFFtaGlVMEkxWWpOV2VVbEhVbWhhUTBFNFRESjRjRkJuTUV0SlEwRm5TVU5CWjBsRFFUaGlSMnRuWXpOU05XSkhWVGxKYlU1MllrYzVlVTlwUW1wbFYwWjFUM2xKSzAxNU5HZFFSREE1VUZRd09WQlVNRGxRVkRBNVVGUXdPVkJVTURsUWFVRTRUREo0Y0ZCbk1FdEpRMEZuU1VOQlowbERRVGhpUjJ0bll6TlNOV0pIVlRsSmJVNTJZa2M1ZVU5cFFtcGxWMFoxVDNsSkswNUROR2RSTWtaellrTkNkRnBUUW1samJUa3dZVWRXZVVsUVEyWnRXVlZuVUVNNWMyRlVORTVEYVVGblNVTkJaMGxEUVdkUVIzaHdTVWhPTUdWWGVHeFFVMHBxWWpKNGRtTnFiMmRaTTJ4b1ltcHphVkJxVlhWSlJWWlhVbFpLV2xRd05VWlFRemx6WVZRMFowbERRV2RKUTBGblNVRXdTMGxEUVdkSlJIZDJaRmQzSzBSUmIwNURhVUZuU1VOQk9GbFlWbXRoVnpobldUSTVkV1JJU25aaVNFMW5XVmhXTUdJelFuTlpXR3RuWWtjNWRtTkVORTVEYVVGblNVTkJaMGxEUVdkUVNFNTJaRmhLYWxwVFFucGpiVTA1U1cxb01HUklRbnBQYVRoMlkwZEdibGxYZUhwaU1qVnVURzFzZFV3eVVuWmtNalZ6WWpKR2EweDZSVEJOZWswelREQnJiRTFxUWsxaU0xcHNTbFJKZDFkWE9URktWRWwzVFZSSk5FcFVTWGRUTUVwUlZYbFZlVTFITVhkTmVVbG5aRWhzZDFwVU1HbFpXRlpyWVZjNGRtSllRbXhhZVVrclJGRnZaMGxEUVdkSlEwRm5TVVpzZG1SWVNXZFpia3AyWkROT2JHTnBRbXRpTWxaNlNVYzFkbVJEUW5wa1dFSjNZak5LTUVsSVVtOWFVMEpvWkZkU2NHSjVRbXhpUjFaMFdsYzFNRXhuTUV0SlEwRm5TVVIzZGxsWVZtdGhWemdyUkZGdk9Fd3lTblphU0dzclJGRnZPRXd5YURCaVYzY3JSRkZ2YVVscFNVNURaekJMU1hsQ1JHSXlVbXhKUjFwMlkybENNR0ZIVldkak1sWjVaRzFXZVVsSGFHaGliVkp6V2xoSlRrTnRUbk5aV0U1NlNVVXhOVk5IUm5WYVIzaHNZMmxvYjJSSVVuZE1iazVzWTI1YWJHTnBOVlJoVnpGM1lrZFdTVlpHVWxGVmJWWjRaRmRXZW1SRmFHaGliVkp6V2xoSmNFOW5NRXRKUTBGblNVZFNiRnBwUW10aU1UbElVbFpSYjJNeVZuTmFhV3MyUkZGdlowbERRV2RKUTBGblNVaE9iR0pIV1hWak1sWjFXa1k1ZVZwWVRuZGlNalY2V2xObmVVMUVRWEJFVVc5blNVTkJaMGxEUVdkSlNFNXNZa2RaZFdNeVZuVmFSamx2V2xkR2ExcFlTVzlLTUU1MlltNVNiR0p1VVhSa1NHeDNXbE5qYzBsRFpEQmFXR2d3VERKb01HSlhkMjVMVVRCTFNVTkJaMGxEUVdkSlEwSjZXbGQ0YlV4dFZuVmFSamx2V2xkR2ExcFlTbnBMUTJ0T1EybEJaMGxEUVdkSlEwRm5ZekpXYzFwcE5UTmFiV3h6V2xNMU0yTnRiREJhVTJodlpFY3hjMWd5VG5aaWJsSnNZbTVSZFZwWE5XcGlNbEpzUzBOcmNFUlJiMDVEWnpCTFdrZFdiVWxIVmpSYVYwNHhaRWRXWm1NeVZubGtiVlo1UzBOck5rUlJiMmRKUTBGblZVVTVVMVpEUVRsSlJGa3hUbFJOTVVSUmIwNURhVUZuU1VOQ00yRllVbTlKU0U1MldUSjBiR1JJVG14amJscHNZMmsxVlZFeFFsUmFXRW95V2xoSmIwdERTV2xNUTBKUlZERktWVXRUZDJkVVdHeEpXVmMxYTJKSFZubExVMEpvWTNsQ2IyUklVbmRhUkc5T1EybEJaMGxEUVdkSlEwRm5ZMGhLY0dKdVVXOUpiRTVzWTI1YWJHTnBRbmxrVnpWMVlWYzFia2xIUmpCSlIyZ3daRWhCTmt4NU9YTmlNazVvWWtkb2RtTXpVVFpsTXpCcFRHMWFkbU50TVdoa1EyaFJWREZLVlV0VGEwNURhVUZuU1VOQlowbERRV2RoU0ZJd1kwZFJkV015Vm5sa2JWWm1XbTA1ZVZwWVdteGphV2R3UkZGdlRrTnRNWFJpVTBFNVNVaEtiR05ZVm14ak0xSjZURzFrYkdSRFoyNWhTRkl3WTBoTk5reDVPWGRaV0U0d1dsZEtjR0pwTldwaU1qQjJZMjFHTTB3d05XRmxTR3hyVVRGb01rcDVhM1ZrUjFZMFpFRXdTMFJSY0d0YVYxbG5ZekpXZFZwR09YQmliV3d3WVZkR2MxZ3lNV3hqTTA1b1dqSlZiMHRVYjA1RGFVRm5TVU5DTTJGWVVtOUpSemwzV2xjMGIwb3pRbWhqTTA0ellqTkthMHh1VWpSa1EyTnpTVU5rZVVwNWEyZFpXRTFuV20xc2MxcFViMDVEYVVGblNVTkJaMGxEUVdkalIwWjZZek5rZG1OdFVXZFFVMEp0WVZkNGJFeHVTbXhaVjFGdlMxTTFlbVJJU25CalEyZHdSRkZ2VGtOcFFXZEpRMEpzWW01U2JHTnRWbXRZTTBKb1l6Tk9NMkl6U210SlJEQm5ZMGRHZW1NelpIWmpiVkZuU1VFd1MwUlJiMmRKUTBGbllWZFpaMXBYTlRCYVdFcHNXa1k1ZDFsWVRucGtNamw1V2tOQmFGQlRRbmRaV0U1NlpESTVlVnBFYjA1RGFVRm5TVU5CWjBsRFFXZGpTRXB3WW01UmIwb3hkbWx1V1hoa1NWQkRabXhLZUVwaWJVNTJZMjVLYkZrelVXZFZSMFo2WXpOa2RtTnRVV2hSTWpsMVpFZEdhbVJEUWtSVFJVWlBVa1pWWjBwNWEwNURhVUZuU1VOQlowbERRV2RqTTJ4NlRHMVdOR0ZZVVc5TFVUQkxSRkZ2WjBsRFFXZGhWMWxuWWxjeGRFbEhOWFprUTBKd1ltbENkMWxZVG5wa01qbDVXa1J2VGtOcFFXZEpRMEZuU1VOQloyTklTbkJpYmxGdlNqRjJhVzVaZUdSSlVFTm1iRXAzWjFOWE5XcGlNMHA1V2xkT01FbEdRbWhqTTA0ellqTkthMGxGVG5aaWJsSm9XVE5SWjFFd2FFSlVhMUpXU1VOamNFUlJiMmRKUTBGblNVTkJaMGxJVGpWamVUVnNaVWRzTUV0RGEwNURaekJMU1VOQlowbElaSEJrUjJkbllqTkNiR0pwWjI1a1J6bHlXbGMxZFdSWE1IVmtTR2d3U25sM1owb3pTVzVMVTBKb1kzbENiV0ZYZUd4UFp6QkxTVU5CWjBsRFFXZEpRMEl3WWpKMGJHSnVUV2RRVTBKdFlWZDRiRXh1U214WlYxSnpZVmMxYkdONVozQkVVVzlPUTJjd1MwbERRV2RKUnpGNldqRTVNRnBYTVhkaVIwWXdXbE5CT1VsRFNrbGFWM2h6WW5sQ1JHRkhSblZhU0ZWbll6SnNlVWxUUWtwSlIwWjBTVWhXZW1GWE5XNUpTR3gyWkZoSloyTXlWbmxrYlZaNVRHbENUbVZUUkdsd1RGaDJkVWs1TUdJeWRHeGlkVXRyZEdVck5HcDVRbkJqZVVJM1psTkpUa05uTUV0RVVXOW5TVU5CWjJSSFJubGFNbFl3V0RKc2EwbEVNR2RKYWtWM1RVUkJNVTU2UVRGUFJGVXlUVVJOTTAxRFNVNURaekJMU1VOQlowbElTbXhqV0Zac1l6TlNla3h1UW1oWk1uUm9XakpXZWt4dVZubGlSM2h3V1dwTmRWcEhiSHBaVjBweldsWTVNMWxZU25WaFZ6VnVZM2xuY0VSUmIwNURhVUZuU1VOQ2ExcFhXV2RpUjJ4MVdsaE9la3REYXpaRVVXOW5TVU5CWjBsRFFXZEpTRUo1WVZjMU1FdERaR05OUkUxNlYzcEZOMDlVV1RkT1JFSjBTbmxCY2tsRFptbHRZbloyZFVrNU5XSXpWV2RaYlhoMldUSjBiRnBEUW5aa01qVnNZMmxDYUZreVRuWmtWelV3U1Voc2RtUllTV2RaV0VKM1kyMDVNbGxYZDJkaFdFMW5ZMjFXZEdJeldteEpTRTUyWWxkVloxbFhXakJhV0VsblpFZHNkRnBsUzFwMUt5czBhbmxqY0VSUmIwNURhVUZuU1VOQ2IxcFhSbXRhV0VwNlNVUXdaMlYzTUV0SlEwRm5TVU5CWjBsRFFXNVJNamwxWW0xV2FtUkhiSFppYVdNMlNVTmtjbHBYVm5kTVYwWnpZVmhhYkVwNWQwNURhVUZuU1VOQlowbERRV2RLTUU1b1dUSm9iRXhWVG5aaWJsSjVZakozYms5cFFXNWlWMFkwVEZkR2JscFVNSGRLZVhkT1EybEJaMGxEUVdkSlEwRm5TakZXZDFvelNtaGFSMVYwVTFjMWVscFhUakZqYlZWMFZXMVdlR1JYVm5wa1NFMXVUMmxCYmsxVFkzTkVVVzluU1VOQlowbERRV2RKUTJSV1l6SldlVXhWUm01YVZ6VXdTbnB2WjBvd01YWmxiV3h6WWtkRmRrNVROSGRKUTJod1ZVZG9kbUp0VlhoT1EzZDZUM2xDVms5NVFrUlZSbFZuWVZaQ2IySXlOV3hKUlRsVVNVUkZNVmg2UVdkaVIyeHlXbE5DVGxsWFRXZFVNVTFuVjBOcloxRllRbmRpUjFaWVdsZEtUR0ZZVVhaT2FrRjVUR3BGZFU1VVFXZExSWFJKVmtVeFRVeERRbk5oVjNSc1NVVmtiRmt5ZEhaTFUwSlhXbGhLZW1GWE9YVk1la1YzVEdwQloxUlhPV2xoVjNoc1RIcEZOVkZVVFRCT2FVSlVXVmRhYUdOdGEzWk9ha0Y1VEdwRmJreEJNRXRKUTBGblNVTkJaMGxEUVc1UlYwNXFXbGhDTUVwNmIyZEtNMUpzWlVoUmRtRklVblJpUTNob1kwaENjMkZYVG1oa1IyeDJZbWs1TkdGSVVuUmlRM1EwWWxkM2MxbFlRbmRpUjJ4cVdWaFNjR0l5TkhabFJ6RnpUek5GT1UxRE5EVk1SMngwV1Zka2JFd3paR3haYmtGellWY3hhRm95VlhaWldFSjFXbmwzY1V4NWJ6ZGpWREIzVEdwbmJreEJNRXRKUTBGblNVTkJaMGxEUVc1UlYwNXFXbGhDTUV4VlZuVlpNamxyWVZjMWJrcDZiMmRLTW1RMllWaEJjMGxIVW14YWJYaG9aRWRWYmt4Qk1FdEpRMEZuU1VOQlowbERRVzVSVjA1cVdsaENNRXhWZUdoaWJXUXhXVmRrYkVwNmIyZEtNbFoxVEZaV1ZFeEhWblZQTTBVNVRVTTBOVXhIV25sUE0wVTVUVU0wTkVwNWQwNURhVUZuU1VOQlowbERRV2RLTTBwc1dtMVdlVnBZU1c1UGFVRnVaRE5rTTB4dFpIWmlNbVJ6V2xNMWFtSXlNRzVFVVc5blNVTkJaMlpSTUV0SlEwRm5TVWRhZG1OcFFqQmlNblJzWW1sQ2NHSnBRakJpTW5Sc1ltNU5Oa1JSYjJkSlEwRm5TVU5CWjBsSFJtcFpNbFo2WXpFNU1HSXlkR3hpYVVFNVNVaFNkbUV5Vm5WTWJrNHdZMjFzZDB0RGEwNURhVUZuU1VOQlowbERRV2RrV0VwelNVUXdaMGx0YURCa1NFSjZUMms0ZGxvelNtaGpSMmQxV20xR2FscFhTblppTW5OMVdUSTVkRXd6V1hoUFF6UjNURE4wT1V4NVNYVmFiVGw1WWxkR01FdERaREJZZVdOblMzbENNRmxZU201YVdGSm1ZVmRSY0VSUmIyZEpRMEZuU1VOQlowbEhNWHBhZVVFNVNVY3hlbG94T1RCYVZ6RjNZa2RHTUZwVE5XMWlNMHAwV1ZoUmIxbFhUbXBhV0U1NldETlNkbUV5Vm5WTFVUQkxTVU5CWjBsRFFXZEpRMEozV1ZoS2FHSlhWakJhV0VwNlNVUXdaMlY1WkdoWk1rNXNZek5PWm1SSE9YSmFWelJ1VDJsQ2FGa3lUbXhqTTA1bVpFYzVjbHBYTkhOSlEyUjBXbGhPZWxsWFpHeEtlbTluWWxoT2JtWlJNRXRKUTBGblNVTkJaMGxEUW5sYVdFNTNZakkxZWxwVFFUbEpTRXBzWTFoV2JHTXpVbnBNYmtKMll6TlJiMlJZU25OTVEwSnhZekk1ZFZCWVFtaGpiVVowV2xoU2JHTnVUWE5KUjJoc1dWZFNiR051VFRsaFIxWm9Xa2RXZVdONWEwNURaekJMUkZGdlowbERRV2RKUTBGblNVZE9NV051U214aWJsSm1aRWRzZEZwVFFUbEpTRkp3WWxkVmRXTXpVbmxhYmxKd1lsZFZiMGxwVmxwTVUxWjBURk5XYTBsRFZrcFBhVlpPVDJsV1ZFbERWbmRKYVd0T1EybEJaMGxEUVdkSlEwRm5aRWRzZEZwVE5YcGlSMVpzWTBObmQweHFSWEJKUVRCTFNVTkJaMGxEUVdkSlEwRk9RMjVPYkdKdFVtWmhWelZ3WkVkc2FHSkdPWFJhV0U1NldWZGtiRXREYTA1RGJWSnNXbWxDZWxwWE5XdFlNakZzWXpOT2FGb3lWbnBZTWxwNVlqSXhabHB0YkhOYVUyZHdUMmN3UzBsRFFXZEpTR1J3WkVkbloySXpRbXhpYVdkdVdUSTVkV1J0T0hWa1NHZ3dTbmwzWjBvelNXNUxVMEpvWTNsQ2JXRlhlR3hQWnpCTFNVTkJaMGxEUVdkSlEwSnFZakkxTW1JeE9YQmFRMEU1U1VkYWNHSkhWWFZqYlZab1drTm5jRXh1VGpCamJXeDNTME5yVGtObk1FdEpRMEZuU1Voa2NHUkhaMmRpTTBKc1ltbG5ibEp0YkhOYVV6VXdaVWhSYmt4RFFXNWphV053U1VkR2VrbEhXbkJpUjFVMlJGRnZaMGxEUVdkSlEwRm5TVWN4YkdNelRtaGFNbFo2U1VRd1oxcHRiSE5hVXpWNVdsZEdhMkpIYkhWYVdFMXZTMUV3UzBSUmIyZEpRMEZuWW01V2RGZ3lNV3hqTTA1b1dqSldla2xFTUdkaVIxWjFTMGN4YkdNelRtaGFNbFo2UzFFd1MwUlJiMmRKUTBGblpESnNNR0ZEUW5aalIxWjFTME5rTUdJeWRHeGliVFV4WWxNMU1HVklVVzVNUTBGdVkybGpjRWxIUm5wSlIxcHdZa2RWTmtSUmIyZEpRMEZuU1VOQlowbElVblpoTWxaMVkzbEJPVWxIV25CaVIxVjFZMjFXYUZwSGVIQmliVlo2UzBOclRrTnBRV2RKUTBKMVpGY3habVJIT1hKYVZ6VjZTVVF3WjJKSFZuVkxTRkoyWVRKV2RXTjVhMDVEYVVGblNVTkNkRmxZYUdaa1J6bHlXbGMxZWtsRU1HZGlWMngxUzBjMU1XSldPVEJpTW5Sc1ltNU5jMGxITlRGaVZqbDBXbGhPZWxsWFpHeGplV3RPUTJjd1MwbERRV2RKU0dSd1pFZG5aMkl6UW14aWFXZHVZVWRHTUZwWVNucGliVVowV2xNMU1HVklVVzVNUTBGdVkybGpjRWxIUm5wSlIxcHdZa2RWTmtSUmIyZEpRMEZuU1VOQlowbEhhR2hrUjFaNVl6RTVkVmxYTVd4SlJEQm5XbTFzYzFwVE5YbGFWMFpyUzBOcmRXTXpVbmxoV0VGdlMxRXdTMGxEUVdkSlEwRm5TVU5CVGtObk1FdEpRMEZuU1Voa2NHUkhaMmRpTTBKc1ltbG5ibVJIYkhSYVV6VXdaVWhSYmt4RFFXNWphV053U1VkR2VrbEhXbkJpUjFVMlJGRnZaMGxEUVdkSlEwRm5TVWhPZDFwWFZtdEpSREJuWVZjMU1FdEhXbkJpUjFWMVkyMVdhRnBEWjNCTWJrNHdZMjFzZDB0RGEzQkVVVzlPUTJsQlowbERRbXRhVjFsbllrZHNkVnBZVG5wTFEyczJSRkZ2WjBsRFFXZEpRMEZuU1VoQ2VXRlhOVEJMUTJSalRVUk5lbGQ2UlRkT1JFVTNUWHBTZEVwNVFYSkpRMlpwYmxsRWFXNU1lbmRzY1VOQ05IQjVXalJ3TmpBMGNEWXhOSEEyTWpSd05qQTBjRFl4TkhBMk1qUndOakEwY0RZeE5HOURhVFJ3VTBFMGNGTkJOSEJUUVRSd1UwRTBiM1ZHTkhCcEt6UndiVGMzTjJsUVNWQkRabXBLUkhkdU5VOHlTVTlMV25Vckt6UnFlVVJwYlV3emFXazBXR2xzU1VScGJFbEVhV3hKUkdsc1NVUnBiRWxFYVc1eVltbHVjbFJwYm5KWWFXNXlZbWx1Y2xScGJuSllhVzV5WW1sdVNtNTNiSEZEUWpSd2VUZzBjREpCU25sclRrTm5NRXRKUTBGblNVZG9iRmxYVW14amJrMW5VRk5DTjBSUmIyZEpRMEZuU1VOQmJsRXlPWFZpYlZacVpFZHNkbUpwWXpaSlEyUnlXbGRXZDB4WFJuTmhXRnBzU25sM1RrTnBRV2RKUTBGblNVTmtSRmxYVG05YVV6RkVZakkxTUdOdE9YTktlbTluU2pJeGFHVkRNV2hhTWxVNVRVTmpjMFJSYjJkSlEwRm5TVU5CYmxaWVFtNWpiVVpyV2xNeFNtSnVUbXhaTTFaNVdsTXhVMXBZUmpGYVdFNHdZM2xqTmtsRFkzaEtlWGRPUTJsQlowbERRV2RKUTJSV1l6SldlVXhWUm01YVZ6VXdTbnB2VGtOcFFXZEpRMEZuU1VOa1RtSXpjSEJpUjNob1RIcFZkVTFEUVc5aFZrSnZZakkxYkUxVVVYTk5lbk5uVmxSeloxRXhRbFpKUjJ4UllVYzVkVnBUUWxCVmVVRjRUbFk0ZDBsSGVIQmhNbFZuVkZkR2FrbEZPVlJKUm1kd1NVVkdkMk5IZUd4V01sWnBVekpzTUV4NldYZE5hVFI0VEdwVmQwbERhRXhUUmxKT1ZFTjNaMkpIYkhKYVUwSklXbGRPY21KNWEyZFdiVlo1WXpKc2RtSnBPSGhOUXpSM1NVVXhkbGx0YkhOYVV6aDRUMVZGZWs1RVdXZFZNa1p0V1ZoS2NFeDZXWGROYVRSNFNubDNUa05wUVdkSlEwRm5TVU5rUWxreVRteGpTRkZ1VDJjd1MwbERRV2RKUTBGblNqTlNiR1ZJVVhaaFNGSjBZa040YUdOSVFuTmhWMDVvWkVkc2RtSnBPVFJoU0ZKMFlrTjBOR0pYZDNOWldFSjNZa2RzYWxsWVVuQmlNalIyWlVjeGMwOHpSVGxOUXpRMVRFZHNkRmxYWkd4TU0yUnNXVzVCYzJGWE1XaGFNbFYyV1ZoQ2RWcDVkM0ZNZVc4M1kxUXdkMHhxWjI1TVFUQkxTVU5CWjBsRFFXZEtNRVpxV1RKV2QyUkRNVVppYlU1MldrZHNkVnA1WXpaSlEyUnVaVzFzZDB4RFFtdGFWMXB6V1ZoU2JFcDVkMDVEYVVGblNVTkJaMGxEWkVKWk1rNXNZMGhSZEZSSFJuVmFNMVpvV2pKVmJrOXBRVzVhVnpSMFZsWk5jMXBYTkRkalZEQjNUR3ByYzFwdVNUZGpWREIzVEdwbmJreEJNRXRKUTBGblNVTkJaMG96U214YWJWWjVXbGhKYms5cFFXNWtNMlF6VEcxa2RtSXlaSE5hVXpWcVlqSXdia1JSYjJkSlNEQk9RMmxCWjBsRFFqTmhSMnh6V2xOQ1ZXTnVWbXhQWnpCTFNVTkJaMGxEUVdkSlEwSXdZMjVyTmtSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBKdFlqTkpaMkpYVm5wak1rWnVXbFk1Y0dKdFVteGxRMEp3WW1sQ2VWbFhOVzVhVTJoMVpGY3habUpYVm5wak1rWnVXbGhOY0U5bk1FdEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxJVW5aaE1sWjFXREpzZFZwSFZqUkpSREJuWWxkV2VtTXlSbTVhVmpsd1ltMVNiR1ZEUVd4SlJ6Rm9aVVk1TUdJeWRHeGliazFPUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwSm9XVEpPYkdNelRtWmtSemx5V2xjMFoxQlRRakJpTW5Sc1ltNU9ZbVJIT1hKYVZ6Vm1ZVmMxYTFwWWFHUk1iazR3WTIxc2QwdERhMDVEWnpCTFNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpSekZzWXpOT2FGb3lWV2RRVTBKMFdsaE9lbGxYWkd4ak1YUjBXbGhPZWxsWFpHeFlNbXgxV2tkV05GaFROWHBrU0Vwd1kwTm5jRVJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQloyUllTbk5KUkRCblNXMW9NR1JJUW5wUGFUaDJXak5LYUdOSFozVmFiVVpxV2xkS2RtSXljM1ZaTWpsMFRETlplRTlETkhkTU0zUTVUSGxKZFZwdE9YbGlWMFl3UzBOa01GaDVZMmRMZVVKcVlqSTFNbUl4T1hCYVEydE9RMmxCWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBKM1dWaEthR0pYVmpCYVdFcDZTVVF3WjJWNVpHaFpNazVzWXpOT1ptUkhPWEphVnpSdVQybENhRmt5VG14ak0wNW1aRWM1Y2xwWE5ITkpRMlIwV2xoT2VsbFhaR3hLZW05bllVZEdNRnBZU25wWU1qVm9ZbGRWWjB0NVFXNUpRMk5uUzNsQ2RGcFlUbnBaVjJSc1psRXdTMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VoS2JHTXpRblppYms1c1NVUXdaMk50Vm5oa1YxWjZaRWhOZFdOSE9YcGtRMmd4WTIxM2MwbEhjSHBpTWpRNVkwZEdlVmxYTVd4a1IxWjVZM2wzWjJGSFZtaGFSMVo1WTNveGIxcFhSbXRhV0VwNlMxRXdTMFJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowUlJiMDVEYVVGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFtcGtXRXA1V2xjMU1GZ3pVbkJpVjFWblVGTkNNR0ZYTVd4TWJrNHdZMjFhTUdGWE1XeExRMGxzVjFNd2JHSlRNR3hhUTBGc1UxUnZiRlJVYjJ4VmVVRnNZME5KY0VSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMkZYV1dkamJWWjZZMGM1ZFdNeVZYVmlNbk0yUkZGdlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsSVFubGhWelV3UzBObWFYQk1XSFoxU1RoblpWYzVNV05wUkdsd1RGaDJkVWs0WjJKWFZucGpNa1p1V2xORWFYQk1XSFoxU1Robll6SldkV1JEUkhkdU5VOXJTVWhPTVZreVRteGpNMDV0WkZkNGMwbFBTMnQwWlNzMGFubGpjRVJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKU0VKNVlWYzFNRXREU21OTlJFMTZWM3BGTjAxNlNUZE9SRUowU1U5UFFXMVBTMWx4VTBScGJrcFVkblZKT0djMGNHbHdORFJEV2xSWFZucGpNa1p1V2xOQloyVXpNR2RpTWxsbldUSTVkV1J0TDJseE4yZG5aVE13WjJNeVZuVmtRMEpwWlZOQ1ZXSXlkR3hpZFV0eWRVTkNOMlpVYjJkbE16QnBURzFhZG1OdE1XaGtRMmRPUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpSekZzWXpOT2FGb3lWbVpoVnpWcldsaG5aMHQ1UVhoTVEwSnFZakkxTW1JeE9YQmFRM2RuWkVjNWNscFhOV1poVnpWcldsaG5aMHQ1UVhoTVEwSnZXVmhTYkdOdVRtWmliVVowV2xOQmNrbERZMmRLZVVGeVNVY3hiR016VG1oYU1sVndTMUV3UzBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUW5OaFZ6VnNZek5OYjB0Uk1FdEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwSnpZVmMxYkdNelRXOUxVVEJMU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlIxWnpZekpWTmtSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlNFSjVZVmMxTUV0RFptbHhOMmRuTkhGVE1UYzNhVkJKUmtKeldsZEdlbHBUUW1waFIwWnFZWGxDTUdGSGJIcEpSa0o1WWpKS2MxcFhNR2MwY1ZNeE56ZHBVRWxQUzNKMGVXTndSRkZ2WjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxJUW5saFZ6VXdTME5LWTAxRVRYcFhla1UzVGtSRk4wNVVWblEwTkVOWk5IQjVXVWxQUzJGdlR5czBhbmxCWnpSd2VWazBORU5hVW0xR2NHSkhVV2M0U2pKWloyWkRaR3czZDJjNFNqSlpaMUJEWkd3M1RIZHVXbVUzT0VveVdITlRRazQ0U2pKWWMzWkRaRzFKUkhkdVdtbEJPRW95V0hKMlEyUnNOMVIzYmxwbGVVbElkRGxKVDB0eWRVTkNVRGhLTWxoemVVSkVPRW95V0hSbVEyUnNOamQzYmxwbGR6aEtNbGgxUTBGbk9Fb3lXSE5RUTJSc04zcDNibHBsTnpoS01sbG5MME5rYkRkM1oyRm1RMlJzTjBWblpUTXdaMHBwUkdseE4yZG5VUzlEWkd3M1dIZHVXbVYxT0VveVdITlFRMlJzTjJkblZrYzVjbHBYTkdkbE16QTJTVWgwT1VscE5XMWlNMHAwV1ZoUmIwUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQ2RGcFlUbnBaVjJSc1dESnNkVnBIVmpSSlEzTm5UVk4zWjFreU9YVmtiVGxtWVZkUmMwbElVblpoTWxaMVdESnNkVnBIVmpSSlEzTm5UVk4zWjJGSFJqQmFXRXA2V0RJMWFHSlhWV2RMZVVGdVNVTmpaMHQ1UW5SYVdFNTZXVmRrYkV0VGEwNURhVUZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5Za2RzZFZwWVRucExRMnRPUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjJKSGJIVmFXRTU2UzBOclRrTnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5DTUdGWE1XeE1iazV6V2xkV2QwdElUbmRhVjFaclMxRXdTMFJSYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEozWTIxc2RXUkRaMmxZUnpWaU5IQnROemMzYVZCWVUwSkNZa2QzWjJKWFZucGpNa1p1V2xoTloyTXlWblZrUXpSblZXMVdlbVJIUm5sa1IyeDFXbmxDTUdGSFZXZGpTRXAyV1RKV2VtTjVOSFZNYkhoMVNXbHJUa05wUVdkSlEwRm5TVU5CWjFwWWFHcGFXRUl3U1VWV05Ga3lWbmRrUjJ4MlltbENhR041UW14UFp6QkxTVU5CWjBsRFFXZEpRMEZuU1VOQloyTklTbkJpYmxGdlNXeHphRmhUUWtKaWFVSnNZMjVLZG1OcFFuWlpNazR4WTI1S2JGcEViMmRsTXpCcFRHMWFkbU50TVdoa1EyaHNTMU5yVGtObk1FdGFSMVp0U1VjeGFHRlhORzlMVkc5T1EybEJaMGxEUW5wYVdFb3lXbGhLWm1SSGFIbGFWMFpyU1VRd1oyUkhhSGxhVjBacllWYzFia3hzVW05amJWWm9Xa05vTUZsWVNtNWFXRkU1V2xob2JGa3pWakJhVmpsNldsaEtNbHBZU1hCRVVXOW5TVU5CWjJNeVZubGtiVlo1V0ROU2IyTnRWbWhhUXpWNlpFZEdlV1JEWjNCRVVXOU9RMmN3UzBsRFFXZEpTRTVzWW0xU1ptSlhWbnBqTWtadVdsaE9abHB1U25aaVZqbHRZVmQ0YkV0RGEwNURaekJMWVZkWloxZ3hPWFZaVnpGc1dERTRaMUJVTUdkS01UbG1ZbGRHY0dKc09XWktlbTlPUTJsQlowbERRblJaVjJ4MVMwTnJQU0lwS1E9PSIpKQ=="))
