# Compiled By Mr Mafia | Muhammad Muzammil
# Github  :  https://github.com/Muzammil-404

import base64
exec(base64.b64decode("aW1wb3J0IGJhc2U2NApleGVjKGJhc2U2NC5iNjRkZWNvZGUoImFXMXdiM0owSUdKaGMyVTJOQXBsZUdWaktHSmhjMlUyTkM1aU5qUmtaV052WkdVb0ltRlhNWGRpTTBvd1NVZEthR015VlRKT1FYQnNaVWRXYWt0SFNtaGpNbFV5VGtNMWFVNXFVbXRhVjA1MldrZFZiMGx0UmxoTldHUnBUVEJ2ZDFOVmFFdGlSMDVaVm0xNGFrMHhTalpTUmtaM1kwZEtXVkZ1V21waWJFWnVXVmMxVDJSdFNtNU5SWFJvVm5wR00xbHFUa3ROUld4SlZXNUNhVll4Vms5Uk1qRnpaRWRPU0U5WWJHdFJNRW8yV2xab1RsUnJUblJYYm14cFRXcENibGt3WkRSaFIxSklWMjVhYW1KVVFtNVpWbU40WkRKSmVsTnFRa3BUUlRReFdYcE9VMkpIU2xKTlJYUm9WbnBHTTFscVRrdE5SV3hJVDFod1JWVllRbmRaYkdoRFpHMU9kVlZYWkdwTk1WcHdXVEJvUzJSc2EzbFdibkJxWkhwQ1RGbFdZM2hrTWtsNlUycENTbEl5WjNkYVJXaENaRmROZVZadWJHdGlWbG8xVWtaR2QyTkhTbGxSYmxwcVlteEdibGw2U1RWaGJVVjVWbXBDYWsxc1dqVmFSekZYWlZWU1VtTklRbWxYUlVveVdUSTFVbG95VWtoaFNHeGhWakJhY2xsV1l6RmlhMUpTWTBjeGFtSlViREJUVldSVFlVZFNTRlpxUW1oV2VrWnpVMVZrYzJSSFRraFBXR3hyVVRCS2NsZFdhRk5pUjFKSVlraFNZVlZVUWt4WlZtTjRaREpKZWxOcVFrcFRSbGw0V1Zaa1VsUnJUbTVOUlhSRlZWaENkbHBGWTNoak1XZDVWRzVhYVdKc1NuTlpiVFZTV2pGQ1ZGRlhiRXBoVld4UFVUSndNMkZHU2taUFZWSlhVbTE0VWxWc1RrTmlNbEpJVFZoT1VWcDZRa3hWUldSdlRVZEtXR1I1ZEVWVlZ6ZzBXVlZrVjJGR2NFVk9SVFZFWVZWR2JsTlZUa0pQUjBwWVZtcENXbFV3U2pGWFZtTjRZa1pDVkZOcVNtaFdNVmw2V1RCak5XVlhVa1JUVjJSYVRXcHNNVnBGWkZka1YxSkZUVWRzYTAxdGVISmFSV1J1VDFad1NGWnFTbWhXTURWelZFWm9hMk5HY0VsVmJUbE5VVEJLZDFsdE1YTk5SMFpZVW01T1RWZEZOWEZYVm1RMFlrWkNWVkpZVms1Uk1HdHlVa1pHZGxvd2JFUlJWMlJSVTBaS2QxcEZaRFJpUmtKeVlXc3hlazFHYUU1amVrWlZWRmhOZUZaRk1YcE5SbWhPWTNwR1RWUllUalZSYTNnMlZFVTFTMlZyZUU1YU1VWjZaVmh3VkZSWWJEWlZiVTQxWld4U2VtVlljRXBTV0ZwT1kzcENTVlJZVGpWUmEwNDJWRVUxU21WcmVFOVZTSEJOVkd4U05sUkZOVVpsYTNoUFVXNXdUVlJYWkZOak0ydzJWVmRPTldWc1NrNWxXSEJWWXpOc05sVnRUalZsYTJ4SFdtc3hlazFGYUU1amVrSTJWRmhOZDFORk1YcGxWVXBWWld0NFQxSnVjRTFVYkU0MlZFVTFXR1ZyZUU5U2JuQk5WR3hPTmxSRk1EUlVSRTVUWTBkU1NHVkhlRkZhZWtKTVUxVk9RbG93YkVWbFNIQnJVMGQ0ZWxkc1VUQlVhMDV3VVZka1NsRXdSbTVUVlU1Q1dqRnNkRTlYZEd4Vk1Fa3pVa1pHZGxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVXMXNXbFl3TlhsWGFrNUxaRzFTV0U1WGRFMVdNbmd3VjFaa2EySkZPWEJSYWtacVlsaGtkbE5xVGt0aFIwMTVZVWhTYUZZelVtOVVSekYzWkRGd05Wa3pRbEJrZWtKTVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNV3gwVW0xd2FFMXRValZaYWs1WFpGWndSRTFZY0doWFNFSnpWREpzUTJGdFNYcFhiWGhxWVc1T1QxRXliRUphTUd4RVVWZGtTbEV3Um01YWJFVjNVekJzUkZGWFpFcFNTR1F5V1hwT1UwNVhTa2hXVTNSRlZWYzRORlJFU205aVJteFlWVk4wUlZWWE9EUlhWekExWVRKV1ZVNUZOVVJoVlVadVUxVk9RazlIUmtWU1YyUnFUVEZKTVZsclpGWlBWV3gwVkc1YWFWSjZiRFZVTW14RFl6SkdXRTFYZUZCbFZXdHlWVEF4TldWc1NtcGxXSEJYVkZoc05sWnJNVFZsYkVwcVpWaHdWbU16YkRaVFZWWXlWRmhOZDJKck1YcGxWVXBFWld0NFQxTlljRTFVYTFvMlZFVTFVR1ZyZUU1YU1VMDBaVmh3VWxremJEWlRWVlpOVkZoTmQyRnJNWHBOUXpsT1kzcEdVVlJZVFhkV1JURjZUVVZvVG1NemJFTlNNM0JOVkd0S05sUkZOVVpsYTNoUFZETndUVlJyV2paVVJURnVWbXBvTldWc1JtcGxXSEJWVkZoc05sVlhUalZsYTJ4SFZVVXhlazFHYUU1amVrWk5WRmhOZUZsck1YcE5SbWhPWTNwR1RWUllUalprTTFwb1VrVlZjbEpHUm5aYU1HeEVVVmRrVVZORlJtNVplazVUVGxkS1NGWlViRXBpVlRVeVdXdGpOV1ZWT1hCUmJYQnNWakJhTVZRemJFcExNVnBJWVVoQ2FtVlZTalpYYkdoTFRXeHdXVk5YWkZwTk1IQnpWMVpvVTJKR2NFUlJiV3hzVlRCS1ZsZHNhRXRoUld4SlVXMW9hbEl3YUROaWFscFlUVEZDUkU5WVpGRmFla0pNVTFWT1Fsb3diRUpOUlhSS1VUQkdibE5WVWpSa01HeEpWR3BDYkZZemFITlZSazVMWVcxSmVXVklXbXBoYlRsdVdXcEtOR05IVW5SV1ZHUktZV3BXVVZwRVNURmlSMDV3VVdzNVdsWjZSbk5UVlZKMlRtdDRWRkpJWkhWT1ZrNTJXVlphVTJWcmJFUlJhelZoV210T2JXTkdiRXBQUlhkNlVWTjBSVlZYT1c1VFZVNUNXakJTVW1JeVpFcFJNRVp1VlVWb1Fsb3lUWHBWYWxacFVqRlZOVk5YTVU5a2JVcElUMWhzVUdGVlNucFpWbU40WWtVNU5WTlRkRXBTYW14dFYwUkZOVnBzWjNoUFYxcFNWak5vZWxOVlZsTmtiVXAwVmxoV1RXRlVVakZXUldNMVlVWndTR0pJVm1GbFZGSXhWRWRyTUdSVmVIRmtNMXBxVWtSU1QxRXliRUphTUd4RVVWUm9hMVl6WTNKU1JrWjJXakJzUkZGWFpFcFJNRVp1VTFWU05HTXlSbFJSYm5CclUwZDRlbGRzVVhkaFZtdDVUMWhPYVUwd2F6SlRWV1JQVGxac1dFNUVaRXBoYWxJMFZFZHNSV1F5TldGaVZFMDBVMnBLYUdGdVdrUmFSekYzVFROa2RWZHVSbXRQUlc5NVdWZHdNbEV5VW5SalNGb3pZbXh3ZUZrd2JGRlJNbEowWW5wa00ySnNjSGhhYW1oTFRXMUdjV1JyVG10aVdFSXlaREkxWVdOWGF6UlRha3BvWW0xYVJGcEhNWGRVU0dSMVYyNUdXRTlGYjNsWlYzQndVa2hrZFZkdVJrNVBSVzk1V1Zjd2RsRXlVblJqVlhnellteHdlRlY2YUV0TmJVWnpUREJPYTJKWVFrSmFlbWhMU3pGc2JtRlZSVFJVUkVvMFkwWkNiazFGZEVwUk1FWnVVMVZPUWxvd2JFUlJWR2hwVWpKMGJsbDZUbE5PVjBwSVZsUnNTbUpWTlRKWmEyTTFaVlU1Y0ZGdVpHdFhSWEF6V1d0a1ZrNHdiSEZPU0d4TllWVktkMWR0YkVOWGJVbDZWbGRrYTFJeWFIZFpiVEY2V2pKV1dFOVVSbXBoVlVwd1YxWmtVbG95UmxSUmJXaHBWVEJKTVZscVRsZGxWV3hJVlcxb1lWRXdSVFJVUkVvMFkwWkNiazFGZEVwUk1FWnVVMVZPUWxvd2JFUlJWR2hwVWpKMGJsbDZUbE5PVjBwSVZsUnNTbUpWTlRKWmEyTTFaVlU1Y0ZGdGNHeFdNRm94VkROc1Nrc3dNVFZPUjJSUlVrUkJOVlZHVVhkUFZrSlZUVVJzVVZaRVFUVlZSbEYzVDFaQ1ZVMUViRkZoVlVVMFZFUktOR05HUW01TlJYUktVVEJHYmxOVlRrSmFNR3hFVVZSb2FWSXlkRzVaZWs1VFRsZEtTRlpVYkVwaVZUVXlXV3RqTldWVk9YQlJiWEJzVmpCYU1WUXpiRXBMTURWRVRrZGtVazFyV25wWmEwNURaRVp3VkZGdGJHcGlWR3QzV1ZWa1YyVlZiRkZSTWxwMFYxWldibFZGVFRWak1rWlZUa1UxUkdGVlJtNVRWVTVDV2pCc1JGRlhaRkZTTTJoM1UxVm9UMDFIVmxobFIzaFJWVEJ3Y1ZscVNqUmtiVTV4WWpKa1drMHllRzlaYlhCNllWWkNjVlpZVmtwU1ZscFlWV3hhUzFkc1VYZE9WVnBSVVhwc2VsbFdVVEJhTUd4RVVWZGtTbEV3Um01VFZVVjNVekJzUkZGWFpFcFNTR1F5V2taa00wc3dVbEppTURWRVlWVkdibE5WVGtKUFJteFpWbTEwYUZaNmFHNVhWRWsxWkZkU1NWTnVXbWxUUlRGdVYxWm9WMDFIU1hwUmJrNWFWMGQwYmxscll6VmtiVTVGVGtVMVJHRlZSbTVUVlU1Q1dqQnNSRkZYWkZGVFJUVXlXa1pvUzJGc2NGUlJibkJxWWxVd05WTlhNVzlOUjFKSlVXNXdVR0ZVYURKWk1HUkhZbXhzV0dWSWNHbE5hbFoxVkVjeGMyUlZkM2xWYmxwclRXcFdlbGxxU2tkaE1IZzJVbFJDVG1Wck1IcFVSRUp5WWtVeGNWRnJNV2xOTVhCelUyeFNTbVF4WkZoUFZFWkxWa1ZzTTFSV1VrcE9SWEJWVTFoa1ZFMUZjRkpXV0d4V1pWVXhTRTFZWkU1bFZXeHVXa1ZvYzJReGNGVk5SMnhhVjBaYWNsbFdZelJrYlVwWlVXMTRZV1ZWYTNKU1JrWjJXakJzUkZGWFpFcFJNRVp1VTFWYWMyUnRVbGxUVjJSYVltdHdNbHBFVGs5aVIwNXdVVzEwYVUxc1dqWlRWV014WkcxU1JGRnVjR3RYUlVveldXcE9TMDFGYkVsVmJUbGhWVEJLYjFwR1pGTmpSMG8xVVcxNGFWSXhXakJYYkdNeFRVVjRiazFGZEVwUk1FWnVVMVZTTTJSc2JGbFdiWFJvVm5wbmNsSkdSblpQUlhkNVUyNWFZVk5IYzNKU1JrWjJUMFYzZVdGRVFtbFdNMk55VWtaR2RtRlZiSEJUVlRWRVducENURk5ZYkVOU1IwbDVWVzE0U2xJeGNESlpNbXhEVFVkR1NGWlhaR3BOYkZvMVdrY3hWMlZWYkVoaFIyaHBZbFpLZWxkc2FFcFVhMDUwVkc1T1dsZEZOVFpUVlZWNFRsWk9TRkp1Vm1GU00yaHpXVEpzYjJJeVVrbFZibVJOWW1zMWMxa3lOV0ZpUjA1d1RsWlNhRlo2UmpOWmEyUlhVMVphUjFWc1JsWmlWbG8wV2taa1YyVnRVa1poUjJocFlsWktlbGRzYUVwalJUbHVUVVYwU2xFd1JtNVRWV1JUWWtad2NGRnRkR2xOVkd4SlZXeGFVbUl5VFhsV2JrNWhZVmR6TWxKR1JuWmFNR3hFVVZka1NsRXdSbTVUVldoUFlrZEtTRmRZVm1wTmJGb3hWMnRaTldWV2NGbFVibVJwVFdwV05sZHNUbTVsVlRGRlVWaENSVlZYT1c1VFZVNUNXakJzUkZGWFpFcFRSVFZ6V1d0a1dtUlhUWGxXYmxaaFVtcHNkbGRzWkVkaE1YQlpVMWM1UzAxRk5USlpiVFZUWWtkS2RWVllVbXRUUjNnelYyeE9hbU13YkVSYVJFSmhWMGRuZDFSRVNtOU5SMHBZWkRJMVRGVlVRa3hUVlU1Q1dqQnNSRkZYWkVwUk1FbzJWMnhrTkdKVmVIUldibFpoVW1wc2RsZHNaRWRoTVhCWlUyNXdURkV5ZEU5Uk1teENXakJzUkZGWFpFcFJNRVp1V1hwS1YyTXhjSEJPVkU1aFlsZDRlbGRzVFRGTk1rNTBZa1JDWVZVeWFIWmFSV040WXpGbmVWUnVXbWxpYkVweldXMDFVbVJXY0ZoT1YzQnBUV3hLYzFNd1RuSmpSVkpTWWpBMVJGcDZRa3hYYTJSWFlsVnNTRlpxVW1GV01EUjRXa1ZrVjFwdFRYbFdibXhyWWxaYU5WTXdUbkpPYTFKU1lqSmtTbEV3Um01V1ZWVTFWVEZhUkZGVWJFcFNSbXQ0Vkd4U1RrMVZVbEppTURWRVlWVkdibE5WVGtOTk1rWlpWVzA1U2xORk5USlhWRW93WWtkU1NWUnRlR3BpYkhCeldUSnJNVlpXUlhoUmJGSmhWMFZ2ZVZkc2FFcGlNSFJFVTFkc1RWRXdTbEpXUkVaTFZsVjBWR1F5WkZWWFIzaEtWMVpqTVdFeVNraFdibXhNVlRCS2Ixa3piRU5pTWxKSlZXNWtZVkpIT1U5Uk1teENXakJzUkZGWFpFcFJNRVp1V1RCb1MyTkhTblZWVnpsS1lrVTFjMWt5TldGaVIwNXdVVzVzYTFaNlZqRlpWbU14WW10c1NGSnFRa3BTTW1kM1drVm9RazVyZURWUFdFNXBUV3MxYjFsclpHOWtiVTE2VlZSYWJFMTZRbkJVUnpGaFpHMU9kRTFYYUd0Uk1taFNWa1JHUzFaVmRGUmhNRFZFWVZWR2JsTlZUa0phTUd4RVVWZGthRk5HU1hkWk1HUlNaRmROZVZadWJHdGlWbHB0VjIwd05XVldjRmxYYlhocVlWZGtkMUpHUm5aVWEwNTBUVmhTYVZVd1JUVlRWV2hMWWtkT1dWWnRlR3BOTVVvMlZFY3hhMkpIVWtSYU1qVm9VMFpKZDFrd2FFNU9hM2cxVDFoa1dsZEZOSGRYYkdSTFkwZEtjRTVYY0dsTmFrSXlXVEl4UjAwd2QzZE9WMFpzVTBkNGNsVlVSbTlOYTNBMVlUTldhMUl4V1RCYVJVVjNVekJTVW1OSGRHRldNV3h1V1hwS1YyUldjRWRQV0VKcFlsZDNkMWxXWkVkak1XZDVUVmQ0YWswd05XOVhha3BXWWpCMFZXSXdOVVJoVlVadVUxVk9RMDB5UmxsVmJUbEtVbnBzTTFkc1l6QmlNRzk2VVcxb2FrMHdOSHBaYWs1TFlUQjRkVlZxVW10Uk1rNTZVMVZPYTJWVmNEVmhNbVJhVjBVeGJsZHRNWE5qTVhCVllqQTFSR0ZWUm01VFZVNUNXakJzUkZGWFpHcFNNRm8yV1hwT2EyUnRUblJWVjJSUlZUQktkRmxXWkRSaVJYaDFVMjE0V2xZeFJuWlRNVTB4WlcxU1NWTnVRbXBSTW1SM1VrWkdkbFJyVG5CUlYyUktVVEJLYzFsdE5WTmlSMDUwVm0xMFdVMHdTbTlaZWs1UFRUSkplbE50ZEVwU1JFSnVXVEJrUjJWdFRYcGFTRnBxWWxaR2JsTlZSWGRUTUZKU1lqSmtTbEV3Um01WlZtUmFXakZ3V0U1VVFtRlhSWEJ6VjJ0Wk5XUXhiRmxVYm5CclRXcHNOVmRyVGtKaFJrSlVVVzVrV2xkRk5UWmFSRWsxWlZad1JXSXdOVVJoVlVadVUxVk9RbG93YkVSUlYyUnFVMFZ3ZDFsdE5WSmlNRzk0Wkcxc2RWZFlhR3RUVmtKRVdtMTRTMlZGY0dsaVZUVXlXVEkxUzJKR2EzcFZWMlJXVWpCYU5sbDZUbXRrYlU1MFZWZG9VazFxYkRGYVJXUkhZVzFTUkZGclVsUlNWVnBRVld0YVZsb3djRFZoTURWRVlWVkdibE5WVGtKYU1HeEVVVmRrYWsweWVEWlVSekZYVGtkR1dWVlhPVXhWVkVKTVVrWkdkbG93YkVSUlYyUm9WakZzYmxsc1kzaGtSV3hJVGxoYWExRXdTbmRaYld4RFpERnNXVlJ1Y0d0TmFtdzFWMnRTZGxSclRuQlJWMlJLVVRCR2JsTlZUa0phTWs1SlUyNUNhV0pzUm5aVGFrWXlZVmMxV21WSFVrcFZSVTV0WWtWd00xb3hUbGhPVjNCcFRUQndOVmRzWkU5TlJXeEhVVzFvYWswd05IcFphazVMWVRCc1JsUnVXbWxpYkVwdlYxUk9VbG94UlhkaFJVcFZZVEZLVjFOVlRtcGpSVkpTWWpKa1NsRXdSbTVUVlU1Q1dqQnNTVlJxVm1wbFZGWnpXbFZrYzAxRmRFUmhNRFZFV25wQ1RGTlZUa0phTUd4SldraENhMUl5Wkc1WmFrNURZa2RLY0ZveU5XdFNlbXg1VjJ4ak1XUlhVbGhOU0ZaclUwZG5kMU51YkROYU1HOTZVMWMxVEZVd1NtOVpNMnhEWWxkR1dHVkhlRkJhZWtKTVUxVk9RbG93YkVSUlYyUktVVEJKZDFscVNqQmlSMHAxVkZka1VWVXdTblJaVm1RMFlrVjRkVk50ZUZwV01VcDZXVlpqTVdKSFRqVmFNMEpGVlZjNVQxRXlZM2RUTUd4RVVWZGtTbEo2UmpaWGFrVTFUVVp3V0UxWVpHbFNNRmwzVjJ4T1FrOVZiRVJUYTJ4aFZqTm9lbGx1YkVOU1IwWklVbTVXWVZOR1ZtNVpla3B6WlZWc1ZGRnJjRXBTTUZvd1UxVm9WMlZ0UmxoT1Z6VktVMGQ0TWxwR2FFcGFNazE1Vm01c2EySldXalZVUjJ4RFZHMVdWRkpIYkhkVVJtZ3laRlZyTlUxSFNYbGtSM2hwWkZWMGNtUkhWWEpPUjNBMVVXNUNhbVZWU1ROYWJFNUtWR3RPYmsxRmRFVlZWemx1VTFWT1Fsb3lVa2hTYm14aFRXeFpkMWRFU25OaE1HeEZUVWRrU21GclZqTlVWVkpDVFVVeE5sVllhRTlsYTFWM1ZERlNUazFyTlVSVFZUVkVXbnBDVEZOVlRrSmFNR3hKVTIxNGFsZEdXbk5aZWs1VFpXdDRkVkZ0YUZwTmJsSnZWMnBLVjJWcmVIVldibXhwVWpOb2QxZFhjRTVrVm5CSVlraHdXbFl3Y0hwWGJGazFUVEZzV1ZOdVZtaFdlbFoxV1ROc2JtTkZVbEppTURWRVlWVkdibE5WVGtOaE1YQllWMWRrYVZJeWVERlhiR2hQWld0MFJHRjZXa1ZWVnpsdVUxVk9RbG93YkVSUlYyUktVMFZLTlZsV1l6Rk5SWFJFV2tkT1RsSkZNVFpXTTNCR1RqQTVWVmRVWkU5U1JVb3dVMjVzUW1OcmJFUmFiV3gwV1c1YU1tUlZhelZPVjBsNlZsZGtXbUpZYURKWFZFb3dZa1p3UkZGdVdtdE5hbFp6V1RKc1EyRkdhM2xVYmxwclZucFZkMU5WYUhOa2JWSlpVMWRrV2xkRlNqTlpNakExVFd4c1dHUXlaR2hYUlRGdVdUSXhWMlJIU1hwWGJYaEtVMFUxTWxsc1pGWmFNV3hZVjJwQ1lWZEZiRzVhUldSelpFWndiRk14Y0RGTGVYTXdZVzVzYW1ORlVsSmlNRFZFWVZWR2JsTlZUa05pTVhCWVVtMTBZVmRGY0RaVFZWRjNXakpXTTAxRmRFcFJNRVp1VTFWT1Fsb3diRVJSVnpWU1RXcHNNVmx0TVZkaGJWSklZa2hhYVdGWFRUSlRWVTVyWTJ4d1dGWnVaRTFXTUZwNldWWm9ZV0pGY0RWa01EVkVZVlZHYmxOVlRrSmFNR3hFVVZka1MwMUZOVzlYVkVwdllrVjRWbFJ1V21saWJFbzFXV3BLTTJKck9YQlJWelZwVmpCWk1GUkdaRWRpYkhCVlRVaGtTMlZZWkU5Uk1teENXakJzUkZGWFpFcFJNRVp1VTJwR1YyUXhiM3BUYldoaFVqRldNRlV4WXpGbGJIQllWR3BHYW1KV1ZqQldWekZYWlVkU1dGWnVjR3RUUlRGMVZESnNRbUpyTVZSWk0wNUZWVmM1YmxOVlRrSmFNR3hFVVZka1NsRXlVbGRaZWtwWFpWVjRWbEp0TldGV2VsVjNVMjV3ZGxvd2IzZE5XRnBzWWxkNGVsbHJaRVprYXpWVVRraGtTbEV5YUhkV1ZXUnZaRzFLZEZaWWFFOVJNMlEyVkROc1ExWnJPVFZSYTFKV1VteFdibGxXV2tOaU1rbDVUbGQ0U2xKVWJGVlRWVkpHVFZab05sRlhaR2xTTW5oNVYyeE9RMVJzYkZoVVYyUlZUVlV4YmxZd1RuSmFNVVpaVVc1a2FWSXhXbGxYYkdSTFZFZEdXVlZZV2s5aGEwWTFWRWR3Um1SVk5WVlJWMlJNVWxoU1NsWnJWWGhVVlhoRVVXNU9hRll6VW5OVFZWWnJZa1pyZVdSSVdreFZNRXBZVjJ4b1MyVnRSbGhQV0ZaTlpXdFdNMVJIY0VKYU1WSllUMWRzYUZZemFITlVTSEJHVGxaR1ZWUlVRazloVlVwVlYxWmtZV0ZIVG5SaE0xcFBZV3RHTlZSSGNFWmlhM2hDVFVWMFNsRXdSbTVUVlU1Q1dqQnNSRkZYTlZKV01EVnhWMnhvUTAxRmNEWmlNbVJMVFRGS2MxcFZhRkprYlVaSlZXNVNhVkV6YUc5Wk1HaERZekpHV0ZSdGFHdFNNbmd5V1cxck5VNUhSa2xWYmxKcFVUTlJNRmxzWkROak1XeFpVVzVrYVZJeWVIRlhWbWhUWTBkSmVVNUlXbXhTZWtaNlZIcE9SazlWTVVST1JGWk5Vako0TUZkV1pHdGlSWGQ2V2tkNFdtSnJSbnBaVm1ONFlVWnZlVlpZV2xwWFJVb3hWMjVzTTJOVmVEVmllbVJxVmtSQ00xUkhjRzVpYTNoQ1RVVjBTbEV3Um01VFZVNUNXakJzUkZGWE5WSldNRFZ4VjJ4b1EwMUZlRlpXYmxaYVRXcHNjbGxXWXpGaWEzQTJZakprUzAxdFVUSlpWbWhDWXpCc1NGVnRlR0ZpV0dodldrVmtWbUpyZUVKTlJYUktVVEJHYmxOVlRrSmFNR3hFVVZjMVVsWXdOWEZYYkdoRFRVVjRWbVZIYUdsaVYxRjRWMVprYTJKRmNEWmlNbVJMVFd4YU1WUkdXbGRXUlhoSVZtNVdVRTB3VlRWVVZVMHdUbFY0U0ZkdWJGQk5NRlUxVkZWTk1FNUZjRFZrTURWRVlWVkdibE5WVGtKYU1HeEVVVmRrUzAwd2NITlhiVEZYWlZad1dWTlhOVkJoVlVaMVdrUk9hMDB3ZUhSYVNGcHBUVzFTZWxkc1RURmhiVWw1VFVjMVJWVlhPVzVUVlU1Q1dqSmFVazFGZEVwUk1FWnVVMVZrWVdSdFRuQlJha0pwVFc1U2MxbHRiRU5qUjBwd1VXcENhVTF1VW5OWmJUVk9UbXRTVW1JeVpFcFJNRVp1VTFWT1Fsb3diRWhTYlhCYVRXeGFObGw2UlRWTlIwbDVaRWQ0YVdGVlJUVlRWV2hUWkcxRmVWWnVWazFpYXpSM1dUSXhjMlF3ZEVSaE1EVkVZVlZHYmxOVlRrSmFNR3hFVVZka2ExZEZjSHBUVlZGM1dqQnNkR0ZFUW10VFJVbzJWREpyTkdSc2IzcFRiV2hxVWpKa01WZHRNVWRoYkhCWVUyNWFhVTF1VGpGWFZFazFaRVYzZWxkWWFGQlJlbEl6VkVST01FOVZlRFZUV0ZaaFlsUnNOVmxzWkVkTlJYUkVXa1JDV1dWWFRtNVRNMnhEVFVac1dWTnROV0ZYUmtwdFdWWmtVbU5GVWxKaU1tUktVVEJHYmxOVlRrSmFNR3hJVFZod1lXVlZSVFZUVldONFpXeHZlRTlVUW1GV2VrWXpXV3RrUjAxR2NGUk9WekZwVFRCd01GZFdhRkppTVd4WVZHMXdZVmRGTlRaWFJFNVRaRzFGZVZadVZreFZWRUpNVTFWT1Fsb3diRVJSVjJSS1VUQktNMWRXYUV0aFIwcFlWbXBDWVZkRmNEWlRWVkYzV2pKV05WcEhhRnBOYXpWeldYcE9UMXB0VWtoUFdFcGhWbnBTZFZReWJFTmhSbXQ1VkcxNGFrMHdOVzFhUldNMVkyeHdXRTVJVGtwUk1sSXdWMnhvVDJWc2JGaGFSM2hMWlcwNWJsbHNhRTlpYlZwU1RVVjBTbEV3Um01VFZVNUNXakJzUkZGdWJHRlhSVFV6V1dwSk1XVnNjRlJSVkd4S1UwVndjMWt4YUZkaVIwMTZWVzV3VFdKclNqSlplazVTWWpKU1dWTnVUazFSTUVwNFdYcEpOV1JXUWxsUmJXaHFZbFZhTUZkc2FGTmlSMDUxVkZoT1NsSXlhSE5YVm1SVFlrZE9kVlJVYkdoU01WcHZWMnRrVjJWWFRqVmhNRFZFV25wQ1RGSkdSblphTUd4RVVWZGtTbEV3Um01VFZXUlBUVmRPZFZOdGVHbGliRXB0V2tWa2MyUkdjRlJSVkd4S1UwWktkMWxzWkZaa1YwMTZWVzVzWVdKc1NuZFpiR1JXWWpCc2NGWnNjRTFWTVZvd1ZFWk9WMkV3YkVSV2EzQlFZVlphVDFReWJGZFdSV3hFVm01a1NtRlhkRTlSTW14Q1dqQnNSRkZYWkVwUk1FWnVXa1ZrYzJSR2NGUk9XSEJwVWpGYWMxa3dUbTVrTUhoeFVsaENTbEZVUWt4VFZVNUNXakJzUkZGWFpFcFJNRVpQVVRJMVQySkhTblJWYlZwb1ZucFdkMXBGWkhOaFIwcEhUMWhTWVZkRk5UWlhWbVJyWWtWMFJHRXdOVVJpVmtwelYyMXNRMlZzY0ZoT1YzUlpUV3BHYzFsNlRrOWhSbTk1Vm01d1dVMXNjRFZaYWtsNFdteHdkR0pJVG1GVk1tUjNWREpqZDFNd2JFUlJWMlJLVTBkU2QxcEZaRzVhTWtsNlVXMTRhV0ZYWkhWWFZFazFaRmRTZEU5SVZtdFRSMmQzVTI1c00xb3diM3BUVnpWTVZUQktiMWt6YkVOaVYwWllaVWQ0VUZwNlFreFRWVTVDV2pCc1JGRlhaRXBSTUVweFdXcEpNVTF0U1hoUFdFSmhVVEJGTlZOVlpHRmpSMHBJVmxoV2FtSldXbTlYYTA1dVkwVjRkVlJxUW1waVYzZ3pVekJPY2xSclRtNU5SWFJLVVRCR2JsTlZhR3RqUjFKSVdqSmthVTB3U25OWmJXeHVZbXhLZEdKSVRtRlZlbFYzV2xWb1VtSnJlRVJSVnpWcVlWZE9kMU5WWkVkbGEyeElWMjVDYVZJeFZUSlNSa1oyV2pCc1JGRlhaRXBSTUVadVUxVmplR0pIVFhwVWJXaGhUV3hhTmxOVlVYZGFNWEIwWWtoT1lWVjZWalZYYkdSSFlUSktTR0pJVm1GWFJURjJVekZGZDFNd1VsSmlNbVJLVVRCR2JsbHROVmRrUm1kNVRWZDRhazB3Tlc5WGFrcFhaV3RzUlUxSFpHbFNNVm94VXpCamVHSkhUWHBVYldoaFRXeGFObE14UlhkVE1GSlNZakprU2xFd1JtNWFSRXB6VFVkR1JGRnVXbXBTTVZveFV6Qk9hMDFIU1hsa1IzaHBZbFJWZUZsc1RURk5SMVpKVlZjMVRWRXdSblZaTW14cVkwVnNTRkp1Y0VwU01YQjNXV3RrVms1clVsSmlNbVJLVVRCR2JsTlZUa0phTUd4SlZXNWFhRTFzV2pGWk0yeENUMVZzU0ZkdVFtbFNNVll4V1RJeFYyRkdjRWhsU0VKcFlsWmFObE13VG5KVWEwNXdVVmRrU2xFd1NqRmFSbU40V20xU1NFOVlTbUZXZWxZMlUxVlJkMW95U2toV2JsWk1VMFpLTWxsVVNsZGtWMDQxWVRBMVJHRlZSbTVUVlU1RFpFWnNXV0ZIV210U2VteDVWMnhqTVdWcmJFVk5SMlJwVmpKNE1WTXdZekZOVjBwWFQxUkNhVTF1VW5OWmJUVk9ZekJzU0U1VVJtbFdhbXd3VjJ4b1QyVnNiRmhhUjNocVpWZDBUMUV5WTNkVE1HeEVVVmRrU2xOSFVuZGFSV1J1V2pKSmVsRnRlR2xoVjJSMVdWVmtSMDFHY0ZsVGJuQnBZbFZhTUZkc1RURk5SMVpKVlZjMVRWRXdSblZaTW14cVkwVnNTRkp1Y0VwU01YQjNXV3RrVms1clVsSmlNbVJLVVRCR2JsTlZUa0phTUd4SVlVZG9hMUl4V2pWWmVrVTFaRlpzV0UxWGVFcFNSRUp1VjIweGMyTXhjRlJPV0d4aFZqQmFjbE13VG5Ka1YwMTZWVzVzYUZkRlJuWlRNVVYzVXpCc1JGRlhaRXBSTUVadVUxVk9RbFJyVG01TlJYUktVVEJHYmxOVmFHdGpSMUpJV2pKa2FVMHdTbk5aYld4dVltMVNTR0pJVW1GVmVsVjNXbFZvVW1KcmVFUlJWelZxWVZkT2QxTlZaRWRsYTJ4SVYyNUNhVkl4VlRKU1JrWjJXakJzUkZGWFpFcFJNRVp1VTFWb1QyUXhjRmhXYlhSS1VrUkNibGxXWXpGTlJYUklWMjVDYVZJeFZqRlpNakZYWVVad1JGb3pRazFpYXpSM1dUSXhjMlF3ZEVSaE0wSkZWVmM1VDFFeWJFSmFNR3hFVVcxMFlWWXhiRzVaYTJSelpGWndXVlJ1Y0V4Uk1uTXlVa1pHZGxvd2JFUlJWMlJLVVRCR2JsTlZhRU5sVjBaWVRsUkNURkV5VW1wVVZWSk9aV3hrTmxKVVpFOVNSVlV6VkZod1UyUkZjRFZSV0VwS1VUSmFjR0pzYkVWaFZ6Vk5aVzVrYzJOVlRrTk9TRUkxVjJwU2QwNXFRVEJqUkZsNFRraEJNazFxVW5kT2FrRXdZMFJaZUU1SVFUSk5hbEozVG1wQk1HTkVXWGhPUnpsRVlWUlNkMVV3UlRCalJrNUNUa2hDVkZGVVVuZFZNRVV3WWpOV1IwNUlRbkJMZWxKM1lsUmpNMDR5YkZGVFZrSkVXbTF3UzFKSVpIVk9WVGg1VTFVNVRGZHVWWEpMZWxKeFpWVlNjR0pWZDNwaFYyc3dWMGRzYzFOVlVuQmlSV3hGWVZkNFNsSkhiSE5UVlZKd1lrVnNSV0ZYTlhsWmJXeDFZMnhTY0dKdVNsbGhWelY1V1cxc2RXTnNVbkJpYmtwWllWYzFlVmx0YkhWVGJUVXpZa2hHUkZGcVVuZGxWR2N3WTBSS1FsTnViSEpVYTA1dVRVVjBTbEV3Um01VFZXUnZZa1pzV0ZWdGVHcGlhekZ1VlVaT1EwNHdVbEppTW1SS1VUQkdibE5WVGtKaWJFVjVUMWhXYVdKV1duRmFSV1J6WkcxS2NGbDZXa3BSTWxKNVYyeGtWMlF3ZUZoU2JrNW9WMFp3YzFOdWJETlVhMDV3VVZka1NsRXdSbTVUVlU1clVrWnNXRlJ0T1dGVmVrWkZXV3BKTVUxSFRuUlBXRTVMWlcwNWJsTnFTWGhoUjFaRVRWZG9ZVTFzVlRWVVZVNXFZekJTVW1JeVpFcFJNRVp1VTFWT1FtSnNXbGxSYlRWcVlsVmFjbGRzVFhoVGJVcDFWRzE0V2sweFdqVlhiRTE0VlRGd1dWSnFSbUZYUlRSM1dUTnNhazVyYkVSWk0yaExaVmhrVDFFeWJFSmFNR3hFVVZka1NsRXlVbGRaZWtwWFpWVjRWbEp0TldGV2VsVjNVMjV3ZGxSclRuQlJWMlJLVVRCR2JsTlZUbXRVYlVsNlkwaENhVkl6YUc5VVNIQldaRlV4UkZGWE9XaFdhMHAyV1dwSk1XSkZNVlZWV0U1T1pXNU9ibFpzVW5wYU1VVjRVV3hhU2xJeWVGSlpWV00xWkZad1ZGRnNRbFpsVlVZMFZHeFpOR1F3YkVobFNFSm9UV3hXYmxaR1pFZGhhMnhHVDFaU1NsSnRaSGRUVlZaSFpESk9TR1ZIZUZkTmJGcHdWWHBLYzAxRmVEWlhXR1JPWVZSU05GUkhjRlprTUd4RVlVVjRWRkpzU2s5V1JVNHpXakpLU0dKSVNtRlZNRXBKVjJ4a1QyTnRTalZoTW1SWFlsWmFOVmw2U25Oa2JVcHdUMGhvVGxGNlVqTlRWVlY0Wkd4c2RHSklUbUZWZW1nMFZERldSbVZyTlVWWFYyUldUV3RhZEZkV2FFdGpSWGcyVjFoa1RtRlVValJUYm13elZHdE9jRkZYWkVwUk1FWnVVMVZPYTFGc2EzbFViWGhxVTBaR2RWUXlZM2RUTUd4RVVWZGtTbEV3Um01VGFrNVRZa2RXU1ZWWVdtaFRSa293V1d0T05HRkhUa2xSYms1b1ZqQTFiMXBGWkhOa2JVcHdUMVJTYUZOR1NqQlphMDR3VGtkS1dHUXpUbHBYUlVveldXdGtjMkZzYkZsVmJrSnBUV3BTTWxwVlkzaGpNRGg2VWxSc1RsRjZVVEZVUldSelpFWnNXRnBIZUUxTk1sSnpWMWMxUW1NeVJsaE5WMmhoVFd4V01sZFdhRU5rVm5BMVpETkdUV1ZYT0ROWk1WRjNaREI0Y1ZveU5VMVJWRUpNVTFWT1Fsb3diRVJSVjJSTFRVVmFjVmRVU2xka01sSkVUVlZhYVdKVk5USlhhMlJ6WkZad05WbDZXa3BSTWxKMVdsY3hjMlF3ZUVSUmJYUmhWakZ3ZWxkV2FGTmlSWEExWkRBMVJHRlZSbTVUVlU1Q1dqQnNSRnBGU2xwTmF6VnpXVEJvVW1SR1VraFNibFpoVFRGYWIxZHFTbFppYXpsd1VWYzFZVlo2VWpCV2JGcE9ZekZ3V0U1RVpHcFdSRUl6VkVkd2NtTXhjSFZUVkdScVZrUkNNMVJIY0c1aWEzaENUVVYwU2xFd1JtNVRWVTVDV2pCdmVsTnRlR0ZpVmxvMVYyeG9TbUpyT1hCUlZ6VnJUVEpSZWxSSE1XdGtiVWw1V2toT1lWVjZWbkZaYWtsM1ltdFNVbUl5WkVwVFJFSlBVVEpzUWxvd2JFUlJhazVvVWpKNGVsZHNUa05XVjA1MVZtMTRVRnA2UWt4VFZVNUNXakJzUkZGWFpFcFJNRWwzV1RJMWNrNXJVbEppTW1SS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xFd1NuUlphazVLV2pKS1dGWnVjR3BOYTFwMVYyeFpOV05IU25SVmJYaHNVVEJLZDFsdGJFTmxWbXhZVGxjMVlWVXlhREZhUm1ONFdtMUtXRlp1Y0dwTmExcDFWMnhvVG1ORk9XNU5SWFJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzU1ZWdVdtaE5iRm94VjBSS2MyUldjRWhXYWxKS1VrUkNibGxzWkZkbGJVMTVVbTAxWVZacWJIZFpiVEZUWWtkV1JGRlhlRXBTZWtadldsVlpOVTFIU1hsa1IzaHBZbXN4VDFFeWJFSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FcHZWMVJLVDJKSFRYcFViVnByVW5wc2VWZHNZekJhTVVKVVVXcENhVTF1VW5OWmJUVlBXVzFTU0U5WVNtRldlbFp0V1Zaak1XRXhjRmxoUjFKTlltczBkMWt5TVhOa01IUkVZVEExUkZwNlFreFRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVbnBHYzFsNlRrOWhSbTk1Vmxka1VWVXdTakJYYkdoUFpXeHNXRnBIZUdwTldGSXdWMnhvVDJWc2JGaGFSM2haVFcxNE1WZHJaRmRPUm1oVVRsaHdhMU5GY0hkWk1FNXVZMFZTVW1JeVpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1sSlpVMjVPU2xKRVFtNVRWekZ2VFVkU1NWRnVjRkJoVkdneVYycE9TMkZIVGtoYU0xWmhZbFZhY1Zkc1pFdGtiVWw1WXpOV1drMXFiREJVUkU1YVpVVTVSRTVJWkUxTk0xRTFWRWhzU21SV2NIUlBXR3hwVmpCWmQxTXdUbXROUm1nMVdUSmtUR1ZWU25GWmFra3hUVzFKZUU5WVFtRlJNblJQVVRKc1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xFd1NqTlhWbWhMWVVkS1dGWnFRbUZYUlhBMlUxVlJkMW95VmpWYVIyaGFUV3MxYzFsNlRrOWFiVkpJVDFoS1lWWjZVblZVTW14RFlVWnJlVlJ0ZUdwTk1EVnRXa1ZqTldOc2NGaE9TRTVLVVRKU01GZHNhRTlsYkd4WVdrZDRTMlZ0T1c1WlZXUkhUVVp3V1ZOdWNGbE5hbFp2V1d4a1Zsb3dkRFZSVnpWS1VUSk9ibE16YkVOa1JuQlpWRzV3V2xZeVVuTmFiRVYzVXpCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVmFFdGlSMDE2VVc1YWFXSnJOWE5UVlZGM1dqSk9kRlp1YUd0V01WbzJXa1ZvVG1SWFRraFBXSEJyVVRKbmVGa3lNVE5qTUd4SVkwaHdhVTFxVVRWWk1HUkhaVlpzV0UxWGVHdFNNVm8xV1ROc00xb3lSa2hXYldoaFVqRmFOVmt6YjNoaU1YQllVbTEwWVZkRmNEWlRNVVYzVXpCU1VtSXlaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNRkpTWWpBMVJHRlZSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJiWEJyVjBWd05WZHNZekZOUm1kNlZXNUNhVll4Vm01VlJrNURUVWRHV0UxWGVFMWlhelIzV1RJeFlVMUhSbGhOVjNoTVVUQnNjMVl4VFhkaVIwcFVUVWQ0WVZFd1JuTlZNVkoyWWtaU1ZXSXllRlpsVlVaeldUQk9TbU5GVWxKaU1tUktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqSkdXRmRYWkdwaVZsbzJXVEJqTldSWFRYbFdXRlpwVFc1Tk1sSkdSblphTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRWxSYm14b1ZucFZkMU13VG0xaFdFSk5WMGhhTVZOVWFHNWFWbU0xVFZkT2NGSkhiSGRVUm1neVpGVnJORm95U2xoV2JuQnFUV3RhZFZkc1RrVmhXRUpOVjBoYU1WTlVhRzVaZWtwWFpGZFNSRkpJWkhWT1ZUbHlVMVZvVDAxV2EzbFViWGhxVFRBMWRGcEdaRFJqTUd4UVV6SjBNRnBUY3pCaGJteHFZMFZTVW1JeVpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xORlNqVlpWbU14VFVWMFJGTnRUazVTUlRFMlZqTndSazR3TVRaVFZHUlBVa1ZLTUZOVk9WQlJWekZRVXpGc2VGVXdVbkJpYTNCVlpHNVdTazlIWXpCalIyeDNUa1JTUkZkc1VsaFdibkJxVFd0YWRWZHNUa0phTWxWNlRVZGthVTFzYkc1WFZFazFaRmRTZEV3eWJIaE9NbVJ1V2xSTmQxb3lUWGxXYmxaclVUQktjRnBXVGtOV1YwbDVaRWQ0YVdSVmRIbGtWVTVEVGpKYVZXSXlaR3hOZWtKd1ZFY3hZV1J0VG5STlYyaHJVVEprVDFFeWJFSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVW5wR2MxbDZUazloUm05NVZtMWFhRlo2Vm5KWGJHaHVXakIwTlZGWWFFMVJNRXB4V1dwSk1VMXRTWGhQV0VKaFVUTmtibHBGWXpWamJIQllUbGRhYUZaNlZuSlhiR2h1V2pCME5WRllhRTFSTUVwMlYxWm9VMkpIVG5WVWJWcHBZbFZhTUZkc1RrSmphMnhFV1RKa1MyVlZSbmxUVldONFlrZE5lbFJ0YUdGTmJGWjNVekZGZDFNd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGdVRtaFdlbFp6V1hwT1RtSXdkRkpOUlhSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVwNldWWmpNV0pIVFhwVVZ6bE1WVlJDVEZOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwU01WcDZXWHBLVms1clVsSmlNbVJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFRSVW8xV1Zaak1VMUZkRVJhYld4NFRqSmtiazVJUmxSTlZHTXpZVlpDU2xKclNucFhiR1JIWld4d1ZGRnRjR2hTTUZweFdWaHNRMDFIUmtoaVNIQktVbXRLTlZscVNrdGpNWEJZVFVkak1HTldUWGhPZW1Sd1ZVVnNVRk16U2pCbFYwNTNVa1pHZGxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzU1ZGdWJHaFdlbFYzVXpCT1Mxa3dNVVZVV0hCWVpXdFZNMVJyVWtaT01EVlZWbTVSTUU1RlRscE9TRUkxVjFWc1VGTXlSblpVZVhNd1lXNXNRbHA2VW5kbFZtc3dUa1ZPWVZWdE1VZGpSMHBJVlZkak5GTnFTbHBhTWxwRVdrZDNNMlF5WXpSVGFrcGFXakZDUkZwSGR6TlVTR1IxVjIxVk0wOUZiM2xYU0U1VVVXczBORk5xU2xsak0xcEVXa2N4U2xKSVpIVlhiV3hDVDBWdmVWZElTakpSTWxKelRqRlNNMkpzY0d4bFZXeEpaRVJzU2xRd2RIbGtWVTVEVlVSb1MwMXNhSHBsVlVwRlQwVnZlVmRJVW0xUk1sSnpUbXBrTTJKc2NHeGtlbWhMVFd4b01WRXdSbTVQUlc5NVYwaE9VVkV5VW5OT00zQXpZbXh3YkU1NmFFdE5iR3h1VERCT2EySkVaRE5hTWtadFVUSlNjMDR3Vm01YVZFMTNXakJ3Y0ZKSGJIaE9NbVJ1VlZNNVJGcEhkek5YU0dSMVYyMVdNVTlGYjNsWFNFNVJVVEpTYzA0eVpHNVdhMk0xWTJ4d1dFNUhaR3hOZWtFeVUxVm9NRTlWYkhCT1Z6RnBUVEJ3TUZkV2FGSmlNRkpTWWpKa1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa05rUm5CWlZHNXdXbFl5VW5OWFJFcHpaRlp3U0ZacVVrcFJNMDV1VkZaT00xb3hhM2xQV0ZacllsUnNiVmxXWkZKak1HeEpWVzVhYUUxc1dqRlhSRXB6WkZad1NGWnFVa3BSTTA1dVZGWk9NMW95UmtoU2FrSmhWMFZ3TmxkRVNURmhSMHBZVmxka1RHVlZSblZUVlU1cVdqQjBOVkZ1VW1GWFJUVTJWMVprYTJKRmRGUmhNRFZFWVZWR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1V1d0a2MyUldjRmxVYm5CTVVUSjBUMUV5YkVKYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG95U2toaVNGWmhWMFUxTmxNd1RuSlVhMDV3VVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUTAxSFJsaE5WM2hOWW1zMWVsZHNaRmRrTUhSSlZHNWtZVll4V25KVE1VVjNVekJTVW1JeVpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQktNMWt5TVhOa1YxSkVXakpzV1ZKNlZtbE9TRUowVG5wak0yRldRbGxWTUVwRFdXdGtNMW95U2xoV2JuQnFUV3RhZFZkc2FFNWFNazE1Vm01V2ExRjZVbTVXVnpGWFpXMVNTRkp1Ykd0U01uZ3hWMjVzUTAxSFJraFdWMlJxVTBWd01sZFVTbGRsYlU0MVRraFdUV0pJYURGVFYyeHlWR3RPY0ZGWFpFcFJNRVp1VTFWT1Fsb3hjRmxoUjNCaFYwVkpkMU5WVmxkT1JtdDVWbTVrYTFJeWVESlpiV3hEWVVkT05WRnRlRkJhZWtKTVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNazVKVTI1Q2FXSnNSblpUVjNoNllVWm9WRkZyU21saFZVcHpXVEkxUzJSdFRuQlJibHBhVFdzMGVGa3lOVXRpUm5CRllqSmtiRTE2UW5CVVJ6RmhaRzFPZEUxWGFHdFJNbWh6VXpGT2NsUnJUbTVOUlhSaFVqRmFkRk5WWTNoaFIwWllUa2M1VEZaSE9VOVJNbXhDV2pCc1JGRnVjR0ZYUlc5NVYyeG9TMXB0VWtoaFNHeGhWakJhY2xOVlVYZGFNbEpJWVVoc1lWWXdXbkpaVm1NeFltdDRjMVZ0T1dwaVZscHZWMnRPYjAxR2JGbFRiVFZoVjBaRk5WZHNhRzlpUm10NlZtcENZVlpxYkRaWGJHaExUV3h3V1ZOWVFrVlZWemx1VTFWT1Fsb3lUWGxXYm14cllsWmFOVmRFVGxOaU1rNTBWbTFvWVZGNlZqWmFSV1JIWlZkU1JGb3pRa1ZWVnpsUFVUSmpkMU13YkVSUlYyUktVMFUxYzFsdE1WTmFiVXBZVm01d2FrMXJXblZYYkdoUFdteHdkVk51V21sV2FteDBXVlprTkdKRmRFUmhNRFZFV25wQ1RGbFdaRnBhTVdkNFQxaFdXbFo2Um5OWFJFVTBXakZDVlUxSFpFdE5WR3h0V1d4a1IyTkhTbk5QVjFwTFpXMDVUMUV5YkVKYU1HeEVVVzVTV2xZeWVERlRNRTV5VUZOSmNFdFJQVDBpS1NrPSIpKQ=="))
